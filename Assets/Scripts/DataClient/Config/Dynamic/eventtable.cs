// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace XWorld.DataConfig
{
    using UnityEngine;
    using System.Collections.Generic;
    using System;
    
    
    public class eventtable : System.ICloneable
    {
        
        public int FinishNpc;
        
        public int FinishDlg;
        
        public int EventID;
        
        public string EventContent;
        
        public int EventCount;
        
        public int LocationDesID;
        
        public int EventtitleID;
        
        public int GiftCheck;
        
        public int FinishCheck;
        
        public int EventDesID;
        
        public string EventActionLua;
        
        public object Clone()
        {
            return this.MemberwiseClone();;
        }
    }
    
    public class Tableeventtable : XWorld.DataConfig.TableBase
    {
        
        public List<eventtable> m_configList = new List<eventtable>();
        
        public void LoadData(XWorld.DataConfig.eventtable codeValue)
        {
            m_configList.Add(codeValue);
        }
        
        public int GetRowCount()
        {
            return 11;
        }
        
        public int GetDataCount()
        {
            if (m_configList == null)
            {
                return 0;
            }
            return m_configList.Count;
        }
        
        public eventtable GetData(int rowIdx)
        {
            if (m_configList != null && rowIdx >= 0 && rowIdx < m_configList.Count)
            {
                return m_configList[rowIdx];
            }
            return null;
        }
        
        public override void LoadData(string content)
        {
            string[] values = content.Split("\r"[0]);
            for (int i = 2; (i < values.Length); i = (i + 1))
            {
                eventtable data = new eventtable();
                int j = 0;
                string[] subValues = values[i].TrimStart('\n').Split(ClientConfigManager.CMD_STRING, StringSplitOptions.None);
                if (subValues != null && subValues.Length == GetRowCount())
                {
                    data.FinishNpc = ClientConfigManager.ToInt32(subValues[j]);
                    j = j + 1;
                    data.FinishDlg = ClientConfigManager.ToInt32(subValues[j]);
                    j = j + 1;
                    data.EventID = ClientConfigManager.ToInt32(subValues[j]);
                    j = j + 1;
                    data.EventContent = (subValues[j]);
                    j = j + 1;
                    data.EventCount = ClientConfigManager.ToInt32(subValues[j]);
                    j = j + 1;
                    data.LocationDesID = ClientConfigManager.ToInt32(subValues[j]);
                    j = j + 1;
                    data.EventtitleID = ClientConfigManager.ToInt32(subValues[j]);
                    j = j + 1;
                    data.GiftCheck = ClientConfigManager.ToInt32(subValues[j]);
                    j = j + 1;
                    data.FinishCheck = ClientConfigManager.ToInt32(subValues[j]);
                    j = j + 1;
                    data.EventDesID = ClientConfigManager.ToInt32(subValues[j]);
                    j = j + 1;
                    data.EventActionLua = (subValues[j]);
                    j = j + 1;
                    m_configList.Add(data);
                }
            }
        }
    }
}
